@model HeyTeam.Web.Models.EventsViewModels.EventReviewViewModel
@using HeyTeam.Util;

<h2>Event Reviews</h2>
<h3>@Model.EventTitle </h3>
<h4><small>@Html.Raw(Model.EventDetails)</small></h4>
<h3>Submitted Reviews</h3>

@if(TempData["Temp_Data_Error"] != null && !TempData["Temp_Data_Error"].ToString().IsEmpty()) {
<div class="alert alert-danger alert-dismissible" role="alert">
    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
    @TempData["Temp_Data_Error"].ToString()
</div>
}


@if(@Model.SquadsNotYetReviewed?.Count() > 0) {
<div>
    <div class="btn-group" role="group" aria-label="...">
        <a class="btn btn-primary" id="AddReviewButton" asp-area="Administration" asp-controller="Events" asp-action="NewReview">Add Review</a>
    </div>
</div>
}

@if (Model.Reviews.Count() == 0)
{
    <div>No review submitted yet</div>
}
else
{

    @foreach (var review in Model.Reviews)
    {
        <div class="panel panel-default">
            <div class="panel-heading">
                @($"{review.Coach?.FirstName} {review.Coach?.LastName}") for @string.Join(", ", review.Squads.Select(s => s.Name))<br />
                @review.LastReviewedOn.Value.ToString("dd MMM yyyy") <span class="glyphicon glyphicon-time"></span>@review.LastReviewedOn.Value.ToString("h:mm tt")
            </div>

            <div class="panel-body">
                <p>
                    <strong>What Went Well?</strong>
                    <div>@review.Successes</div>
                </p>
                <p>
                    <strong>What Did Not Go Well?</strong>
                    <div>@review.Opportunities</div>
                </p>
                <p>
                    <strong>What Could Be Done Differently?</strong>
                    <div>@review.DifferentNextTime</div>
                </p>
            </div>
        </div>
    }
}