@model HeyTeam.Web.Models.EventsViewModels.MatchReportViewModel

<h2>@Model.EventTitle</h2>
<h3>Match Report</h3>
<h4><small>@Html.Raw(Model.EventDetails)</small></h4>

<div class="row">
    <div class="col-md-4">
        <form asp-action="Report">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Opponent" class="control-label"></label>
                <input asp-for="Opponent" class="form-control" disabled />
                <span asp-validation-for="Opponent" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="GoalsScored" class="control-label">Score</label>
                <div class="form-inline text-center">
                    <div class="form-group">
                        <div class="form-group">
                            <div class="input-group">
                                <span class="input-group-addon">Our Team</span>
                                <input type="number" asp-for="GoalsScored" class="form-control" placeholder="0" style="width:60px" min="0" max="10" disabled>
                            </div>
                        </div>
                        vs
                        <div class="form-group">
                            <div class="input-group">
                                <input type="number" asp-for="GoalsConceeded" class="form-control" style="width:60px" placeholder="0" min="0" max="10" disabled> <span class="input-group-addon">Opponent</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="Scorers" class="control-label"></label>
                <textarea asp-for="Scorers" class="form-control" rows="3" disabled></textarea>
                <span asp-validation-for="Scorers" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CoachsRemarks" class="control-label"></label>
                <textarea asp-for="CoachsRemarks" class="form-control" rows="3" disabled></textarea>
                <span asp-validation-for="CoachsRemarks" class="text-danger"></span>
            </div>
            <div class="modal-footer">
                <a id="cancelButton" class="btn btn-default hidden">Cancel</a>
                <input id="submitButton" type="submit" value="Submit" class="btn btn-primary hidden" />

                <a id="backToListButton" asp-area="Coaches" asp-controller="Events" asp-action="Index" class="btn btn-default">Back To List</a>
                <button type="button" id="editButton" class="btn btn-default">Edit</button>
                <button type="button" id="emailButton" class="btn btn-primary hidden"><span class="glyphicon glyphicon-envelope"></span> Email</button>
            </div>
        </form>
    </div>
</div>

<div class="modal fade" id="emailModalWindow" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <form method="post" id="emailForm">                
                <input type="hidden" asp-for="EventId" />
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Email This Report</h4>
                </div>
                <div class="modal-body">
                    <div id="messagePopup" style="display:none;" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <span id="messageText"></span><br />
                        <span id="messageDesc"></span>
                    </div>
                    <div class="form-group">
                        <input type="checkbox" name="sendMeACopy" id="sendMeACopy" checked />
                        <label class="control-label" for="sendMeACopy">Send me a copy</label>
                    </div>
                    <div class="form-group">
                        <label class="control-label" for="emailAddress">Players</label>
                        <div><a href="#" id="selectAllEmails">Select All</a><a href="#" id="clearEmails" style="margin-left:15px;">Clear</a></div>
                        <select id="emailAddress" name="emailAddress" class="form-control" asp-items="@Model.Players" multiple style="width:100%;"></select>
                    </div>                    
                    <div id="anotherEmailDiv"></div>
                    <a id="addAnotherEmail" href="#"><span class="glyphicon glyphicon-plus"></span> Add another recipient</a>
                </div>
                    
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <button type="submit" id="sendEmailButton" class="btn btn-primary">Send</button>
                </div>
</form>            
        </div>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/lib/select2/dist/js/select2.min.js"></script>    
    <script>
        var reportExists = @Model.ReportExists.ToString().ToLowerInvariant();
        toggleEmailButton();

        $("#emailAddress").select2();
        selectAllEmails(true);

        $("#editButton, #cancelButton").click(function () {
            $("#editButton, #backToListButton, #cancelButton, #submitButton").toggleClass("hidden");
            var disabled = $("#Opponent").prop("disabled");
            $("input[type=text], textarea, input[type=number]").prop("disabled", !disabled);
            toggleEmailButton();
        });

        function toggleEmailButton() {
            if (reportExists)
                $("#emailButton").toggleClass("hidden");
        }

        $('#emailButton').on('click', function (e) {
            e.preventDefault();
            $("#anotherEmailDiv").empty();
            resetFormValidator("#emailForm");
            $('#emailModalWindow').modal('show');
        });        

        $("#emailForm").on("submit", function (e) {
            e.preventDefault();
            if ($("#emailForm").valid()) {
                //enableEmailForm(false);
                sendEmail();
            }
        });

        $("#emailForm").validate({
            invalidHandler: function (event, validator) {
                var errors = validator.numberOfInvalids();
                if (errors) {
                    $("div.error").show();
                } else {
                    $("div.error").hide();
                }
            }
        });

        $("#addAnotherEmail").click(function () {
            var id = "additionaEmail" + ($("input[type='email']").length + 1);
            var emailControl =
                '<div class="form-group text-right">'+
                    '<input type="email" name="' + id + '" class="form-control" placeholder= "email address" required/>' +
                        '<a id="removeEmail" href="#" >Remove</a>' +                
                '</div>';

            $("#anotherEmailDiv").append($(emailControl));                
        });

        $("#selectAllEmails").click(function () { 
            selectAllEmails(true);
        });

        $("#clearEmails").click(function () {
            selectAllEmails(false);
        });
        
        $("body").on('click', "#removeEmail", function () {
            $(this).closest(".form-group").remove();            
        });        

        function resetFormValidator(formId) {
            $(formId).removeData('validator');
            $(formId).removeData('unobtrusiveValidation');
            $('#messageText').empty();
            $('#messageDesc').empty();
            $('#messagePopup').removeAttr("class");
            $.validator.unobtrusive.parse(formId);
        }

        function selectAllEmails(selected) {
            $('#emailAddress > option').prop("selected", selected).change();
        }

        function sendEmail() {
            $.ajax({
                method: "POST",
                contentType: 'application/json',
                url: "/api/events/emailReport",
                data: JSON.stringify(getEmailFormData())
            })
                .done(function (data) {
                    $('#messageText').text("Email sent successfully");
                    $('#messagePopup').removeAttr("class");
                    $('#messagePopup').addClass("alert alert-success alert-dismissible").fadeIn().delay(500).fadeOut(function () { $('#emailModalWindow').modal('hide'); });

                })
                .fail(function (message) {
                    $('#messageText').html("<strong>Error sending email</strong>");
                    var errors = JSON.parse(message.responseText);
                    var formattedError = "";
                    if (errors && errors.length > 0) {
                        for (var i = 0; i < errors.length; i++) {
                            formattedError += errors[i] + (i == errors.length - 1 ? "" : "<br/>");
                        }
                    }

                    $('#messageDesc').html(formattedError);
                    $('#messagePopup').removeAttr("class");
                    $('#messagePopup').addClass("alert alert-danger alert-dismissible").fadeIn().delay(10000).fadeOut();
                });
            //.always(function () {
            //        enableEmailForm(true);
            //    });
        }

        //function enableEmailForm(enabled) {
        //    $("#emailForm > input").prop("disabled", !enabled);
        //}

        function getEmailFormData() {
            var emailAddresses = [];
            var selectedPlayerEmails = $("select[name='emailAddress']").val();
            if (selectedPlayerEmails != null && selectedPlayerEmails.length > 0) {
                emailAddresses = $.merge([], selectedPlayerEmails);
            }
            
            $("input[type='email']").each(function () {
                emailAddresses.push($(this).val());
            });

            return {
                eventId: $("#EventId").val(),
                emailAddress: emailAddresses,
                sendMeACopy: $("#sendMeACopy").prop('checked')
            };
        }

    </script>
}

@section CSS {
    <link href="~/lib/select2/dist/css/select2.min.css" rel="stylesheet" />
    <style type="text/css">
        .error{
            color:rgb(200, 0, 0);
            display:inline-block;
            float:left;
        }
    </style>
}