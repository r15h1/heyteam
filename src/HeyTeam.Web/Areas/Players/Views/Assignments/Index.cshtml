@model HeyTeam.Web.Models.Assignments.IndexViewModel

<h2>Assignments</h2>
<h3>List</h3>
<div class="row">
    <div class="col-md-12" style="margin-bottom:15px;">
        <div class="form-inline">
            <div class="form-group">
                <label for="month">Due on or after:</label>
                <input id="month" type="month" class="form-control" value=@($"{DateTime.Now.Year}-{(DateTime.Now.Month < 10 ? "0" : "")}{DateTime.Now.Month}")>
            </div>
        </div>
    </div>
</div>

<div id="message" style="display:none"></div>
<div class="assignments"></div>

<div class="modal fade" id="assignmentDetailsDialog" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">            
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Assignment Details</h4>
            </div>
            <div class="modal-body">                
                <div class="form-group">
                    <label for="assignmentTitle" class="control-label">Title</label>
                    <input type="text" id="assignmentTitle" class="form-control" readonly maxlength="250" />
                </div>
                <div class="form-group">
                    <label for="assignmentInstructions" class="control-label">Instructions</label>
                    <textarea id="assignmentInstructions" class="form-control" readonly rows="5"></textarea>
                </div>
                <div class="form-group">
                    <label for="assignmentDueDate" class="control-label">Due Date</label>
                    <input id="assignmentDueDate" class="form-control" style="width:200px" readonly />
                </div>
                <div class="form-group">
                    <label for="assignmentTrainingMaterials" class="control-label" style="display:block;">Training Materials</label>
                    <div id="assignmentTrainingMaterials"></div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>            
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/lib/select2/dist/js/select2.min.js"></script>
    <script>
        var playerId = "@Model.PlayerId";
        var trainingMaterialsDropdown = null;
        var tablehtml =
            '<div class="table-responsive">' +
            '<table class="table table-bordered table-hover">' +
            '<thead>' +
            '<tr>' +
            '<th class="col-md-3">Title</th>' +
            '<th class="col-md-4">Instructions</th>' +
            '<th class="col-md-2 text-center">Due Date</th>' +
            '<th class="col-md-1 text-center">#Training Materials</th>' +
            '<th class="col-md-2 text-center">Last Viewed On</th>' +
            '</tr>' +
            '</thead>' +
            '<tbody></tbody>' +
            '</table>' +
            '</div>';

        $("#month").change(updateTable);

        function updateTable() {
            $(".assignments").empty();
            $("#message").text("Fetching data, please wait...");
            $("#message").show();

            var date = $('#month').val() + "-01";
            var apiUrl = "/api/assignments?date=" + date + "&playerid=" + playerId;

            $.ajax({
                method: "GET",
                url: apiUrl
            }).done(function (data) {
                console.log("ajax done...");
                if (data.length > 0) {
                    addRows(data);
                    $(".assignments").show();
                    $("#message").hide();
                } else {
                    $(".assignments").hide();
                    $("#message").show();
                    $("#message").text("No records found");
                }
            }).fail(function (jqXHR, textStatus, errorThrown) {
                console.log("ajax failed...");
            }).always(function () {
                console.log("ajax completed...");
                bindEvents();
            });
        }

        function bindEvents() {
            $('.table-responsive').unbind();
            $('.table-responsive').on('show.bs.dropdown', function () {
                $('.table-responsive').css("overflow", "inherit");
            });

            $('.table-responsive').on('hide.bs.dropdown', function () {
                $('.table-responsive').css("overflow", "auto");
            });

            $("button.viewAssignmentDetails").click(function () {
                var row = $(this).closest("tr");
                var assignmentId = row.data("assignmentid");
                getAssignment(assignmentId, showAssignmentDetailsDialog);
            });
        }

        function addRows(data) {
            var table = $(tablehtml);
            var tableBody = table.find("tbody");
            for (var index in data) {
                var record = data[index];
                var row = "<tr data-assignmentid='" + record.assignmentId + "'>" +
                    "<td><button class='btn btn-link viewAssignmentDetails' type='button'>" + record.title + "</button></td>" +
                    "<td>" + (record.instructions != null && record.instructions.length > 100 ? (record.instructions.substring(0, 99) + "...") : record.instructions)+ "</td>" +
                    "<td class='text-center'>" + record.formattedDueDate + "</td>" +
                    "<td class='text-center'>" + record.trainingMaterialCount + "</td>" +
                    "<td class='text-center'>" + record.viewedOn + "</td>" +
                    "</tr>";
                tableBody.append(row);
            }
            $(".assignments").append(table);
        }

        function getAssignment(assignmentId, callback) {
            $.ajax({
                method: "GET",
                url: "/api/assignments/" + assignmentId + "?playerid=" + playerId
            }).done(function (data) {
                callback(data);
            }).fail(function (jqXHR, textStatus, errorThrown) {
                console.log("ajax failed...");
            });
        }

        function showAssignmentDetailsDialog(assignment) {
            $("#assignmentTitle").val(assignment.title);
            $("#assignmentInstructions").val(assignment.instructions);
            $("#assignmentDueDate").val(assignment.formattedDueDate);
            $("#assignmentTrainingMaterials").empty();

            for (var index in assignment.trainingMaterials) {
                var tm = assignment.trainingMaterials[index];
                var trackingUrl = "/players/" + playerId + "/tracking/assignments/" + assignment.assignmentId + "/library/" + tm.guid;
                var tmHtml = "<div class='media' style='margin-top:10px; padding-bottom:10px'>" +
                    "<div class='media-left'><a href='" + trackingUrl + "' target='_blank'><img class='media-object' style='max-height:40px;' src='" + tm.thumbnailUrl + "'></a></div>" +
                    "<div class='media-body'><div class='img-changer-text'><a href='" + trackingUrl + "' target='_blank'>" + tm.title + "</a></div>(" + tm.shortContentType + ")</div>" +
                "</div>";
                $("#assignmentTrainingMaterials").append(tmHtml)
            }

            $('#assignmentDetailsDialog').modal('show');
        }

        updateTable();
    </script>
}

@section CSS {
    <link href="~/lib/select2/dist/css/select2.min.css" rel="stylesheet" />
    <style>
        .select2-container--default .select2-search--inline .select2-search__field {
            width: 100% !important;
        }
    </style>
}