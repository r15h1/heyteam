@model HeyTeam.Web.Models.Assignments.IndexViewModel
<h2>Assignments</h2>
<h3>List</h3>
<div class="row">
    <div class="col-md-12" style="margin-bottom:15px;">
        <div class="form-inline">
            <div class="form-group">
                <label for="month">Month Assigned:</label>
                <input id="month" type="month" class="form-control" value=@($"{DateTime.Now.Year}-{(DateTime.Now.Month < 10 ? "0" : "")}{DateTime.Now.Month}")>
            </div>
        </div>
    </div>
</div>

<div id="message" style="display:none"></div>
<div class="assignments"></div>

<div class="modal fade" id="assignmentDialog" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <input type="hidden" id="eventId" name="eventId" />
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Assignment Details</h4>
            </div>
            <div class="modal-body">
                <p class="message">Fetching views, please wait...</p>
                <div class="content"></div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script src="~/lib/select2/dist/js/select2.min.js"></script>
    <script>

        var tablehtml = '<div class="table-responsive">' +
                            '<table class="table table-bordered table-hover">' +
                                '<thead>' +
                                    '<tr>' +
                                        '<th class="col-md-4">Assignment</th>' +
                                        '<th class="col-md-2">Assigned By</th>' +
                                        '<th class="col-md-2">Assigned On</th>' +
                                        '<th class="col-md-2">Due Date</th>' +
                                        '<th class="col-md-2">Viewed</th>' +
                                    '</tr>' +
                                '</thead>' +
                            '<tbody></tbody>' +
                        '</table>' +
            '</div>';


        $("#month").change(updateTable);

        function updateTable() {
            var date = $('#month').val().split('-');
            $(".assignments").empty();
            $("#message").text("Fetching data, please wait...");
            $("#message").show();

            var date = $('#month').val().split('-');
            var apiUrl = "/api/assignments?month=" + date[1] + "&year=" + date[0] + "&players=@Model.PlayerId";


            console.log("calling ajax...");
            $.ajax({
                method: "GET",
                url: apiUrl
            }).done(function (data) {
                console.log("ajax done...");
                if (data.length > 0) {
                    addRowsToAssignmentList(data);
                    $(".assignments").show();
                    $("#message").hide();
                } else {
                    $(".assignments").hide();
                    $("#message").show();
                    $("#message").text("No records found");
                }
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    console.log("ajax failed...");
                }).always(function () {
                    console.log("ajax completed...");
                    bindEvents();
                });
        }

        function bindEvents() {
            $('.table-responsive').unbind();
            $('.table-responsive').on('show.bs.dropdown', function () {
                $('.table-responsive').css("overflow", "inherit");
            });

            $('.table-responsive').on('hide.bs.dropdown', function () {
                $('.table-responsive').css("overflow", "auto");
            })

            $(".assignmentTitle").tooltip("destroy");
            $(".assignmentTitle").tooltip({ placement: "auto right", trigger: 'hover' });
            $("a.assignmentTitle").click(function (e) {
                e.preventDefault();
                var assignmentId = $(this).closest("tr").data("assignmentid");
                var playerAssignmentId = $(this).closest("tr").data("playerassignmentid");                           
                var apiUrl = "/api/assignments/" + assignmentId + "/player/" + playerAssignmentId;
                $.ajax({
                    method: "GET",
                    url: apiUrl
                }).done(function (data) {
                    displayAssignmentDetails(data);
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    console.log("ajax failed...");
                });
            });
        }

        function addRowsToAssignmentList(data) {
            for (var index in data) {
                var record = data[index];
                var table = $(tablehtml);
                var tableBody = table.find("tbody");
                var allocations = record.allocations;
                if (allocations != null && allocations.length > 0) {
                    for (var j in allocations) {
                        var allocation = allocations[j];
                        var row = "<tr data-playerassignmentid='" + allocation.playerAssignmentId + "' data-assignmentid='" + record.assignmentId + "'>" +
                            "<td><a href='#' class='assignmentTitle' title='" + record.instructions + "'>" + record.title + "</a></td>" +
                            "<td>" + allocation.assignedBy + "</td>" +
                            "<td>" + allocation.assignedOn + "</td>" +
                            "<td>" + (allocation.dueDate == null ? "" : allocation.dueDate) + "</td>" +
                            "<td></td>" +
                            "</tr>";
                        tableBody.append(row);
                    }
                    $(".assignments").append(table)
                }
            }
        }

        function displayAssignmentDetails(data) {
            var assignmentDialog = $("#assignmentDialog");
            var contentArea = assignmentDialog.find("div.content");
            contentArea.empty();
            contentArea.append("<div class='form-group'>" +
                "<label for='title' class='control-label'>Title</label>" +
                "<input class='form-control' readonly value='" + data.title + "'/></div>");
            contentArea.append("<div class='form-group'>" +
                "<label for='instructions' class='control-label'>Instructions</label>" +
                "<textarea name='instructions' rows='10' class='form-control' readonly>" + data.instructions + "</textarea></div>");

            contentArea.append("<div class='form-group training-materials'><label for='TrainingMaterials' class='control-label'></label></div>");
            if (data.trainingMaterials != null && data.trainingMaterials.length > 0) {
                var trainingMaterialList = contentArea.find("div.training-materials");
                for (var index in data.trainingMaterials) {
                    var tm = data.trainingMaterials[index];
                    trainingMaterialList.append("<div class='media' style='margin-top:10px; padding-bottom:10px'>" +
                    "<div class='media-left'><a href='" + tm.url + "' target='_blank'><img class='media-object' style='max-height:40px;' src='" + tm.thumbnailUrl + "'></a></div>" +
                        "<div class='media-body'><div class='img-changer-text'><a target='_blank' href='" + tm.url + "'>" + tm.title + "</a></div></div></div>");
                }
            }

            assignmentDialog.find("p.message").hide();
            assignmentDialog.modal("show");
        }

        updateTable();
    </script>
}

@section CSS {
    <link href="~/lib/select2/dist/css/select2.min.css" rel="stylesheet" />
    <style>
        .assignmentTitle {
            display: inline;
        }
    </style>
}